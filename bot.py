import os
import logging
from datetime import datetime, timedelta
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from geopy.distance import geodesic

# Load environment variables
load_dotenv()

# Configure logging
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# Constants
LOCATION_RADIUS = 50  # meters
INACTIVITY_DAYS = 30

class CityQuestBot:
    def __init__(self):
        self.token = os.getenv('TELEGRAM_BOT_TOKEN')
        if not self.token:
            raise ValueError("No TELEGRAM_BOT_TOKEN found in environment variables")

    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """Send welcome message when the command /start is issued."""
        welcome_message = (
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ City Quest Bot!\n\n"
            "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –æ—Ç–∫—Ä—ã—Ç—å –Ω–æ–≤—ã–µ –º–µ—Å—Ç–∞ –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ —á–µ—Ä–µ–∑ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –∫–≤–µ—Å—Ç.\n"
            "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é, –∏ –º—ã –Ω–∞—á–Ω–µ–º –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ!\n\n"
            "–ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ—Å—Ç—ã:\n"
            "1. –Ø –±—É–¥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–±–µ –∑–∞–≥–∞–¥–∫–∏ –æ –º–µ—Å—Ç–∞—Ö –≤ –≥–æ—Ä–æ–¥–µ\n"
            "2. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –Ω–∞–π—Ç–∏ —ç—Ç–æ –º–µ—Å—Ç–æ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ —Å–≤–æ—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é\n"
            "3. –ï—Å–ª–∏ —Ç—ã –≤ —Ä–∞–¥–∏—É—Å–µ 50 –º–µ—Ç—Ä–æ–≤ –æ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –º–µ—Å—Ç–∞, —è –¥–∞–º —Ç–µ–±–µ —Å–ª–µ–¥—É—é—â—É—é –∑–∞–≥–∞–¥–∫—É\n"
            "4. –í—Å–µ–≥–æ 10 –∑–∞–¥–∞–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–∫—Ä–æ—é—Ç —Ç–µ–±–µ –Ω–æ–≤—ã–µ —É–≥–æ–ª–∫–∏ –≥–æ—Ä–æ–¥–∞\n\n"
            "–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å? –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é! üìç"
        )
        await update.message.reply_text(welcome_message)

    async def handle_location(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """Handle the user's location."""
        # TODO: Implement location handling logic
        await update.message.reply_text("–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–∫–∞—Ü–∏–∏ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ!")

    def run(self):
        """Start the bot."""
        application = Application.builder().token(self.token).build()

        # Add handlers
        application.add_handler(CommandHandler("start", self.start))
        application.add_handler(MessageHandler(filters.LOCATION, self.handle_location))

        # Start the bot
        application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    bot = CityQuestBot()
    bot.run() 